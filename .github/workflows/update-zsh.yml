name: Update Colors Variable - ZSH

on:
  # schedule:
    # - cron: "0 0 * * 0"
  workflow_dispatch:

jobs:
  update2:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: |
            cache/__p9k_colors
          sparse-checkout-cone-mode: false
          fetch-depth: 1
      
      - name: Restore cached static Zsh
        uses: actions/cache/restore@v4
        id: zsh-cache
        with:
          path: ~/.local
          key: ${{ runner.os }}-zsh-static
      
      - name: Install static Zsh
        if: steps.zsh-cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p ~/.local
          sh -c "$(curl -fsSL https://raw.githubusercontent.com/romkatv/zsh-bin/master/install)" -- -d ~/.local -e 'no'
          
      - name: Save cached static Zsh
        if: steps.zsh-cache.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: ~/.local
          key: ${{ steps.zsh-cache.outputs.cache-primary-key }}
                
      - name: Run Update Colors Variable Script
        shell: zsh {0}
        run: |
          mktouch() {
            [[ -z "$1" ]] && return
            mkdir -p "${1:h}" && touch "$1"
          }
          
          is_not_latest() {
            [[ -z "$1" ]] && return
            local v1="${1#v}" v2="${2#v}"
            local latest=$(printf '%s\n' "$v1" "$v2" | sort -V | tail -n1)
            [[ "$v1" != "$latest" ]]
          }
          
          get_latest_release() {
            local repo_owner="$1"
            local repo_name="$2"
            curl -s "https://api.github.com/repos/$repo_owner/$repo_name/releases/latest" | grep -oE '"tag_name": *"[^"]+"' | cut -d'"' -f4
          }
          
          view_file_online() {
            local repo_owner="$1"
            local repo_name="$2"
            local file_path="$3"
            curl -s "https://raw.githubusercontent.com/$repo_owner/$repo_name/refs/heads/master/$file_path"
          }
          
          push_repo() {
            git diff --quiet && return
            
            local name="$1"
            local email="$2"
            shift $(( $# > 2 ? 2 : $# ))
            
            git config --global user.name "$name"
            git config --global user.email "$email"
          
            local -a to_add=() msgs=()
            for arg in "$@"; do
              [[ -e "$arg" ]] && to_add+=("$arg") || msgs+=("$arg")
            done
          
            (( ${#to_add[@]} )) || to_add=(${(@f)$(git diff --name-only)})
            git add "${to_add[@]}"
            git commit -m "${msgs[*]:-Updated on: $(date)}"
            git push
          }
          
          update_colors_var() {
              local file="${1:-cache/__p9k_colors}"
              local var="${file:t}"
              mktouch "$file"
          
              local repo_owner="romkatv"
              local repo_name="powerlevel10k"
              local file_path="internal/p10k.zsh"
          
              local current_version=$(head -n1 "$file" | sed -e 's/[#\s]//g')
              local latest_version=$(get_latest_release "$repo_owner" "$repo_name")
          
              if is_not_latest "$current_version" "$latest_version"; then
                  echo "# $latest_version" > "$file"
                  view_file_online "$repo_owner" "$repo_name" "$file_path" | \
                      sed -n "/^typeset.*${var}=(/,/)/p" >> "$file"
              fi
              
              local pusher="github-actions[bot]"
              push_repo "$pusher" "$pusher@users.noreply.github.com" "$file" "Updated to: $latest_version"
          }
          
          update_colors_var
          