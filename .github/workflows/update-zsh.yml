name: Update Colors Variable - ZSH

on:
  # schedule:
    # - cron: "0 0 * * 0"
  workflow_dispatch:

jobs:
  update2:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: |
            cache
          sparse-checkout-cone-mode: false
          fetch-depth: 1
      
      - name: Install ZSH
        run: |
          sudo apt-get update
          sudo apt-get install zsh
          command -v zsh
        
      - name: Run Update Colors Variable Script
        shell: /usr/bin/zsh {0}
        run: |
          mktouch() {
            [[ -z "$1" ]] && return 1
            mkdir -p "${1:h}" && touch "$1"
          }
          
          is_not_latest() {
            [[ -z "$1" ]] && return 1
            local v1="${1#v}" v2="${2#v}"
            local latest=$(printf '%s\n' "$v1" "$v2" | sort -V | tail -n1)
            [[ "$v1" != "$latest" ]]
          }
          
          get_latest_release() {
            local repo_owner="$1"
            local repo_name="$2"
            curl -s "https://api.github.com/repos/$repo_owner/$repo_name/releases/latest" | grep -oE '"tag_name": *"[^"]+"' | cut -d'"' -f4
          }
          
          view_file_online() {
            local repo_owner="$1"
            local repo_name="$2"
            local file_path="$3"
            curl -s "https://raw.githubusercontent.com/$repo_owner/$repo_name/refs/heads/master/$file_path"
          }
          
          update_colors_var() {
              local var='__p9k_colors'
              local file="cache/$var"
              mktouch "$file"
          
              local repo_owner="romkatv"
              local repo_name="powerlevel10k"
              local file_path="internal/p10k.zsh"
          
              local current_version
              current_version=$(head -n1 "$file" | sed -e 's/[#\s]//g')
              local latest_version
              latest_version=$(get_latest_release "$repo_owner" "$repo_name")
          
              if is_not_latest "$current_version" "$latest_version"; then
                  git config --global user.name "github-actions[bot]"
                  git config --global user.email "github-actions[bot]@users.noreply.github.com"
          
                  echo "# $latest_version" > "$file"
                  view_file_online "$repo_owner" "$repo_name" "$file_path" | \
                      sed -n "/^typeset.*${var}=(/,/)/p" >> "$file"
                  
                  git add cache
                  git commit -m "Updated to $latest_version"
                  git push
              fi
          }
          
          update_colors_var
          
    
